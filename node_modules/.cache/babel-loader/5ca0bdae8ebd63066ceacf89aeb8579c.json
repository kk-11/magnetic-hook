{"ast":null,"code":"var _jsxFileName = \"/Users/killiandebuitleir/coding/magnetic-exp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useL, useLayoutEffectayoutEffect } from \"react\";\nimport { useMousePosition } from \"./hooks/useMousePosition\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    x,\n    y\n  } = useMousePosition();\n  const [center, setCenter] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  const ref = useRef(null);\n  useLayoutEffect(() => {\n    const x = ref.current.offsetLeft + ref.current.offsetWidth / 2;\n    const y = ref.current.offsetTop + ref.current.offsetHeight / 2;\n    const width = ref.current.offsetWidth;\n    const height = ref.current.offsetHeight;\n    setCenter({\n      x,\n      y\n    });\n    setDimensions({\n      width,\n      height\n    });\n  }, [ref.current]);\n  const whatX = x - center.x;\n  const whatY = y - center.y;\n  const distance = Math.sqrt(whatX * whatX + whatY * whatY);\n  const hoverArea = isHovering ? 0.6 : 0.5; // console.log(\"distance\", distance);\n\n  if (distance < dimensions.width) {\n    console.log(\"over\");\n\n    if (!isHovering) {// setIsHovering(true);\n    } //  this.onEnter();\n\n  } else {\n    console.log(\"not over\");\n\n    if (isHovering) {//  this.onLeave();\n      // setIsHovering(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: ref,\n      className: \"item\",\n      children: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/5/WjkAXq0m+uEWDpQJcuLyi69M=\", false, function () {\n  return [useMousePosition];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/killiandebuitleir/coding/magnetic-exp/src/App.js"],"names":["useState","useRef","useL","useLayoutEffectayoutEffect","useMousePosition","App","x","y","center","setCenter","dimensions","setDimensions","width","height","isHovering","setIsHovering","ref","useLayoutEffect","current","offsetLeft","offsetWidth","offsetTop","offsetHeight","whatX","whatY","distance","Math","sqrt","hoverArea","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,0BAAjC,QAAmE,OAAnE;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAWH,gBAAgB,EAAjC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AAAEM,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAApC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAD,CAA5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMgB,GAAG,GAAGf,MAAM,CAAC,IAAD,CAAlB;AAEAgB,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMX,CAAC,GAAGU,GAAG,CAACE,OAAJ,CAAYC,UAAZ,GAAyBH,GAAG,CAACE,OAAJ,CAAYE,WAAZ,GAA0B,CAA7D;AACA,UAAMb,CAAC,GAAGS,GAAG,CAACE,OAAJ,CAAYG,SAAZ,GAAwBL,GAAG,CAACE,OAAJ,CAAYI,YAAZ,GAA2B,CAA7D;AACA,UAAMV,KAAK,GAAGI,GAAG,CAACE,OAAJ,CAAYE,WAA1B;AACA,UAAMP,MAAM,GAAGG,GAAG,CAACE,OAAJ,CAAYI,YAA3B;AAEAb,IAAAA,SAAS,CAAC;AAAEH,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAD,CAAT;AACAI,IAAAA,aAAa,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAb;AACD,GARc,EAQZ,CAACG,GAAG,CAACE,OAAL,CARY,CAAf;AAUA,QAAMK,KAAK,GAAGjB,CAAC,GAAGE,MAAM,CAACF,CAAzB;AACA,QAAMkB,KAAK,GAAGjB,CAAC,GAAGC,MAAM,CAACD,CAAzB;AAEA,QAAMkB,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGA,KAAR,GAAgBC,KAAK,GAAGA,KAAlC,CAAjB;AACA,QAAMI,SAAS,GAAGd,UAAU,GAAG,GAAH,GAAS,GAArC,CArBa,CAsBb;;AACA,MAAIW,QAAQ,GAAGf,UAAU,CAACE,KAA1B,EAAiC;AAC/BiB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,QAAI,CAAChB,UAAL,EAAiB,CACf;AACD,KAJ8B,CAK/B;;AACD,GAND,MAMO;AACLe,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAIhB,UAAJ,EAAgB,CACd;AACA;AACD;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,GAAG,EAAEE,GAAb;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3CQX,G;UACUD,gB;;;KADVC,G;AA6CT,eAAeA,GAAf","sourcesContent":["import { useState, useRef, useL, useLayoutEffectayoutEffect } from \"react\";\nimport { useMousePosition } from \"./hooks/useMousePosition\";\nimport \"./App.css\";\n\nfunction App() {\n  const { x, y } = useMousePosition();\n  const [center, setCenter] = useState({ x: 0, y: 0 });\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n  const ref = useRef(null);\n\n  useLayoutEffect(() => {\n    const x = ref.current.offsetLeft + ref.current.offsetWidth / 2;\n    const y = ref.current.offsetTop + ref.current.offsetHeight / 2;\n    const width = ref.current.offsetWidth;\n    const height = ref.current.offsetHeight;\n\n    setCenter({ x, y });\n    setDimensions({ width, height });\n  }, [ref.current]);\n\n  const whatX = x - center.x;\n  const whatY = y - center.y;\n\n  const distance = Math.sqrt(whatX * whatX + whatY * whatY);\n  const hoverArea = isHovering ? 0.6 : 0.5;\n  // console.log(\"distance\", distance);\n  if (distance < dimensions.width) {\n    console.log(\"over\");\n    if (!isHovering) {\n      // setIsHovering(true);\n    }\n    //  this.onEnter();\n  } else {\n    console.log(\"not over\");\n    if (isHovering) {\n      //  this.onLeave();\n      // setIsHovering(false);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <button ref={ref} className=\"item\">\n        button\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}