{"ast":null,"code":"var _jsxFileName = \"/Users/killiandebuitleir/coding/magnetic-exp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useLayoutEffect } from \"react\";\nimport gsap, { Power4, Elastic } from \"gsap\";\nimport { useMousePosition } from \"./hooks/useMousePosition\";\nimport \"./App.css\"; // const onEnter = (item, x, y) => {\n//   const magneticPullX = 0.4;\n//   const magneticPullY = 0.9;\n//   gsap.to(item, {\n//     x: x * magneticPullX,\n//     y: y * magneticPullY,\n//     ease: Power4.easeOut,\n//     duration: 0.4,\n//   });\n// };\n// const onLeave = (item) => {\n//   gsap.to(item, {\n//     x: 0,\n//     y: 0,\n//     ease: Elastic.easeOut.config(1.1, 0.5),\n//     duration: 0.7,\n//   });\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    x,\n    y\n  } = useMousePosition();\n  const [center, setCenter] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  const ref = useRef(null);\n\n  const onEnter = () => {};\n\n  const onLeave = () => {};\n\n  useLayoutEffect(() => {\n    const x = ref.current.offsetLeft + ref.current.offsetWidth / 2;\n    const y = ref.current.offsetTop + ref.current.offsetHeight / 2;\n    const width = ref.current.offsetWidth;\n    const height = ref.current.offsetHeight;\n    setCenter({\n      x,\n      y\n    });\n    setDimensions({\n      width,\n      height\n    });\n  }, [ref.current]);\n  const dx = x - center.x;\n  const dy = y - center.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const hoverArea = isHovering ? 0.6 : 0.5;\n\n  if (distance < dimensions.width * hoverArea) {\n    if (!isHovering) {\n      setIsHovering(true);\n    } // onEnter(ref.current, dx, dy);\n\n\n    onEnter();\n  } else {\n    if (isHovering) {\n      // onLeave(ref.current);\n      onLeave();\n      setIsHovering(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: ref,\n      style: {\n        transform: `translate(${0}px,${0}px)`\n      },\n      className: \"item\",\n      children: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/5/WjkAXq0m+uEWDpQJcuLyi69M=\", false, function () {\n  return [useMousePosition];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/killiandebuitleir/coding/magnetic-exp/src/App.js"],"names":["useState","useRef","useLayoutEffect","gsap","Power4","Elastic","useMousePosition","App","x","y","center","setCenter","dimensions","setDimensions","width","height","isHovering","setIsHovering","ref","onEnter","onLeave","current","offsetLeft","offsetWidth","offsetTop","offsetHeight","dx","dy","distance","Math","sqrt","hoverArea","transform"],"mappings":"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","sourcesContent":["import { useState, useRef, useLayoutEffect } from \"react\";\nimport gsap, { Power4, Elastic } from \"gsap\";\nimport { useMousePosition } from \"./hooks/useMousePosition\";\nimport \"./App.css\";\n// const onEnter = (item, x, y) => {\n//   const magneticPullX = 0.4;\n//   const magneticPullY = 0.9;\n//   gsap.to(item, {\n//     x: x * magneticPullX,\n//     y: y * magneticPullY,\n//     ease: Power4.easeOut,\n//     duration: 0.4,\n//   });\n// };\n\n// const onLeave = (item) => {\n//   gsap.to(item, {\n//     x: 0,\n//     y: 0,\n//     ease: Elastic.easeOut.config(1.1, 0.5),\n//     duration: 0.7,\n//   });\n// };\nfunction App() {\n  const { x, y } = useMousePosition();\n  const [center, setCenter] = useState({ x: 0, y: 0 });\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n  const ref = useRef(null);\n\n  const onEnter = () => {};\n\n  const onLeave = () => {};\n  useLayoutEffect(() => {\n    const x = ref.current.offsetLeft + ref.current.offsetWidth / 2;\n    const y = ref.current.offsetTop + ref.current.offsetHeight / 2;\n    const width = ref.current.offsetWidth;\n    const height = ref.current.offsetHeight;\n\n    setCenter({ x, y });\n    setDimensions({ width, height });\n  }, [ref.current]);\n\n  const dx = x - center.x;\n  const dy = y - center.y;\n\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const hoverArea = isHovering ? 0.6 : 0.5;\n  if (distance < dimensions.width * hoverArea) {\n    if (!isHovering) {\n      setIsHovering(true);\n    }\n    // onEnter(ref.current, dx, dy);\n    onEnter();\n  } else {\n    if (isHovering) {\n      // onLeave(ref.current);\n      onLeave();\n      setIsHovering(false);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <button\n        ref={ref}\n        style={{\n          transform: `translate(${0}px,${0}px)`,\n        }}\n        className=\"item\"\n      >\n        button\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}