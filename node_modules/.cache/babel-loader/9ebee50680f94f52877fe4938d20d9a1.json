{"ast":null,"code":"var _jsxFileName = \"/Users/killiandebuitleir/coding/magnetic-exp/src/components/magneticWrapper.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport gsap, { Power4, Elastic } from \"gsap\";\nimport { useMousePosition } from \"../hooks/useMousePosition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst magneticPullX = 0.8;\nconst magneticPullY = 0.9;\nconst durationPull = 0.4;\nconst durationRetract = 0.7;\n\nconst onEnter = (item, x, y) => {\n  gsap.to(item, {\n    x: x * magneticPullX,\n    y: y * magneticPullY,\n    ease: Power4.easeOut,\n    duration: durationPull\n  });\n};\n\nconst onLeave = item => {\n  gsap.to(item, {\n    x: 0,\n    y: 0,\n    ease: Elastic.easeOut.config(1.1, 0.5),\n    duration: durationRetract\n  });\n};\n\nexport default function MagneticWrapper({\n  children\n}) {\n  _s();\n\n  const ref = useRef(null);\n  const {\n    x,\n    y\n  } = useMousePosition();\n  const [center, setCenter] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const {\n      offsetTop,\n      offsetLeft,\n      offsetWidth,\n      offsetHeight\n    } = ref.current;\n    const centerX = offsetLeft + offsetWidth / 2;\n    const centerY = offsetTop + offsetHeight / 2;\n    const width = offsetWidth;\n    const height = offsetHeight;\n    setCenter({\n      centerX,\n      centerY\n    });\n    setDimensions({\n      width,\n      height\n    });\n  }, [ref.current]);\n  const dx = x - center.x;\n  const dy = y - center.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const hoverArea = isHovering ? 1 : 1; //hover area must be larger than not hovering.\n\n  if (distance < dimensions.width * hoverArea) {\n    //whichever is larger\n    if (!isHovering) {\n      setIsHovering(true);\n    }\n\n    onEnter(ref.current, dx, dy);\n  } else {\n    if (isHovering) {\n      onLeave(ref.current);\n      setIsHovering(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MagneticWrapper, \"OdVwsdNG8COmT6/00SXaoGmCfk8=\", false, function () {\n  return [useMousePosition];\n});\n\n_c = MagneticWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"MagneticWrapper\");","map":{"version":3,"sources":["/Users/killiandebuitleir/coding/magnetic-exp/src/components/magneticWrapper.js"],"names":["useState","useRef","useEffect","gsap","Power4","Elastic","useMousePosition","magneticPullX","magneticPullY","durationPull","durationRetract","onEnter","item","x","y","to","ease","easeOut","duration","onLeave","config","MagneticWrapper","children","ref","center","setCenter","isHovering","setIsHovering","dimensions","setDimensions","width","height","offsetTop","offsetLeft","offsetWidth","offsetHeight","current","centerX","centerY","dx","dy","distance","Math","sqrt","hoverArea"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport gsap, { Power4, Elastic } from \"gsap\";\nimport { useMousePosition } from \"../hooks/useMousePosition\";\n\nconst magneticPullX = 0.8;\nconst magneticPullY = 0.9;\nconst durationPull = 0.4;\nconst durationRetract = 0.7;\n\nconst onEnter = (item, x, y) => {\n  gsap.to(item, {\n    x: x * magneticPullX,\n    y: y * magneticPullY,\n    ease: Power4.easeOut,\n    duration: durationPull,\n  });\n};\n\nconst onLeave = (item) => {\n  gsap.to(item, {\n    x: 0,\n    y: 0,\n    ease: Elastic.easeOut.config(1.1, 0.5),\n    duration: durationRetract,\n  });\n};\n\nexport default function MagneticWrapper({ children }) {\n  const ref = useRef(null);\n  const { x, y } = useMousePosition();\n  const [center, setCenter] = useState({ x: 0, y: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = ref.current;\n    const centerX = offsetLeft + offsetWidth / 2;\n    const centerY = offsetTop + offsetHeight / 2;\n    const width = offsetWidth;\n    const height = offsetHeight;\n\n    setCenter({ centerX, centerY });\n    setDimensions({ width, height });\n  }, [ref.current]);\n\n  const dx = x - center.x;\n  const dy = y - center.y;\n\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const hoverArea = isHovering ? 1 : 1; //hover area must be larger than not hovering.\n  if (distance < dimensions.width * hoverArea) {\n    //whichever is larger\n    if (!isHovering) {\n      setIsHovering(true);\n    }\n    onEnter(ref.current, dx, dy);\n  } else {\n    if (isHovering) {\n      onLeave(ref.current);\n      setIsHovering(false);\n    }\n  }\n\n  return <div ref={ref}>{children}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}