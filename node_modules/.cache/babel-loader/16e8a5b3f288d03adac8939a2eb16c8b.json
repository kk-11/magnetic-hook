{"ast":null,"code":"var _jsxFileName = \"/Users/killiandebuitleir/coding/magnetic-exp/src/components/magneticWrapper.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from \"react\";\nimport gsap, { Power4, Elastic } from \"gsap\";\nimport { useMousePosition } from \"../hooks/useMousePosition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst magneticPullX = 0.8;\nconst magneticPullY = 0.9;\nconst durationPull = 0.4;\nconst durationRetract = 0.7;\nconst springStiffness = 0.5;\n\nconst onEnter = (item, x, y) => {\n  gsap.to(item, {\n    x: x * magneticPullX,\n    y: y * magneticPullY,\n    ease: Power4.easeInOut,\n    duration: durationPull\n  });\n};\n\nconst onLeave = item => {\n  gsap.to(item, {\n    x: 0,\n    y: 0,\n    ease: Elastic.easeOut.config(1.1, springStiffness),\n    duration: durationRetract\n  });\n};\n\nexport default function MagneticWrapper({\n  children\n}) {\n  _s();\n\n  const ref = useRef(null);\n  const {\n    x,\n    y\n  } = useMousePosition();\n  const [isHovering, setIsHovering] = useState(false);\n  const [wrapper, setWrapper] = useState({\n    center: {\n      x: 0,\n      y: 0\n    },\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const {\n      offsetTop,\n      offsetLeft,\n      offsetWidth,\n      offsetHeight\n    } = ref.current;\n    const x = offsetLeft + offsetWidth / 2;\n    const y = offsetTop + offsetHeight / 2;\n    const width = offsetWidth;\n    const height = offsetHeight;\n    setWrapper({\n      center: {\n        x,\n        y\n      },\n      width,\n      height\n    });\n  }, [ref.current]);\n  const dx = x - wrapper.center.x;\n  const dy = y - wrapper.center.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const hoverArea = isHovering ? 8 : 7; //hover area must be larger than not hovering.\n\n  if (distance < wrapper.width * hoverArea) {\n    //whichever is larger\n    if (!isHovering) {\n      setIsHovering(true);\n    }\n\n    onEnter(ref.current, dx, dy);\n  } else {\n    if (isHovering) {\n      onLeave(ref.current);\n      setIsHovering(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n_s(MagneticWrapper, \"gXbvTEjEgn/a3ovOD8bIhQfRmgo=\", false, function () {\n  return [useMousePosition];\n});\n\n_c = MagneticWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"MagneticWrapper\");","map":{"version":3,"sources":["/Users/killiandebuitleir/coding/magnetic-exp/src/components/magneticWrapper.js"],"names":["useState","useRef","useEffect","gsap","Power4","Elastic","useMousePosition","magneticPullX","magneticPullY","durationPull","durationRetract","springStiffness","onEnter","item","x","y","to","ease","easeInOut","duration","onLeave","easeOut","config","MagneticWrapper","children","ref","isHovering","setIsHovering","wrapper","setWrapper","center","width","height","offsetTop","offsetLeft","offsetWidth","offsetHeight","current","dx","dy","distance","Math","sqrt","hoverArea"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport gsap, { Power4, Elastic } from \"gsap\";\nimport { useMousePosition } from \"../hooks/useMousePosition\";\n\nconst magneticPullX = 0.8;\nconst magneticPullY = 0.9;\nconst durationPull = 0.4;\nconst durationRetract = 0.7;\nconst springStiffness = 0.5;\n\nconst onEnter = (item, x, y) => {\n  gsap.to(item, {\n    x: x * magneticPullX,\n    y: y * magneticPullY,\n    ease: Power4.easeInOut,\n    duration: durationPull,\n  });\n};\n\nconst onLeave = (item) => {\n  gsap.to(item, {\n    x: 0,\n    y: 0,\n    ease: Elastic.easeOut.config(1.1, springStiffness),\n    duration: durationRetract,\n  });\n};\n\nexport default function MagneticWrapper({ children }) {\n  const ref = useRef(null);\n  const { x, y } = useMousePosition();\n  const [isHovering, setIsHovering] = useState(false);\n  const [wrapper, setWrapper] = useState({\n    center: { x: 0, y: 0 },\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = ref.current;\n    const x = offsetLeft + offsetWidth / 2;\n    const y = offsetTop + offsetHeight / 2;\n    const width = offsetWidth;\n    const height = offsetHeight;\n\n    setWrapper({ center: { x, y }, width, height });\n  }, [ref.current]);\n\n  const dx = x - wrapper.center.x;\n  const dy = y - wrapper.center.y;\n\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const hoverArea = isHovering ? 8 : 7; //hover area must be larger than not hovering.\n  if (distance < wrapper.width * hoverArea) {\n    //whichever is larger\n    if (!isHovering) {\n      setIsHovering(true);\n    }\n    onEnter(ref.current, dx, dy);\n  } else {\n    if (isHovering) {\n      onLeave(ref.current);\n      setIsHovering(false);\n    }\n  }\n\n  return <div ref={ref}>{children}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}